_snapcraft()
{
  local cur prev opts
  _init_completion -s || return

  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="help init list-plugins plugins login logout export-login list-keys keys create-key register-key register registered list-registered push release clean cleanbuild pull build sign-build stage prime pack update define search gated validate history status close enable-ci expand-extensions extension extensions list-extensions --target-arch --build-for --debug --shell --offline --shell-after --destructive-mode --use-lxd --provider --http-proxy --https-proxy --add-ca-certificates --bind-ssh --enable-experimental-extensions --enable-experimental-target-arch --ua-token -h --help upload --verbose"

  case "$prev" in
  help)
    plugins=$(snapcraft list-plugins)
    COMPREPLY=( $(compgen -W "$plugins" -- $cur))
    return 0
    ;;
  upload | push | sign-build)
    _filedir 'snap'
    return 0
    ;;
  enable-ci)
    COMREPLY=( travis )
    return 0
    ;;
  --target-arch | --build-for)
    arch_options="arm64 armhf amd64"
    COMPREPLY=( $(compgen -W "$arch_options" -- $cur))
    return 0
    ;;
  --provider)
    provider_options="host lxd multipass"
    COMPREPLY=( $(compgen -W "$provider_options" -- $cur))
    return 0
    ;;
  build | clean | pull | stage | prime)
    # if we have yq installed use it, otherwise try to use parts directory
    if [ -n "$(which yq)" ]; then
      # first find snapcraft.yaml
      for sy in snapcraft.yaml snap/snapcraft.yaml build-aux/snapcraft.yaml build-aux/snap/snapcraft.yaml
      do
        if [ -e ${sy} ]; then
          snapcraft_yaml="${sy}"
          continue
        fi
      done
      if [ -n "${snapcraft_yaml}" ]; then
        parts_options=$(yq --output-format tsv '.parts | keys | ... comments=""' ${snapcraft_yaml})
      fi
    fi
    if [ -z "${parts_options}" ]; then
      parts_options="$(find parts/ -mindepth 1 -maxdepth 1 -type d -printf '%P ')"
    fi
    COMPREPLY=( $(compgen -W "$parts_options" -- $cur))
    return 0
    ;;
  *)
    ;;
  esac

  COMPREPLY=( $(compgen -W "$opts" -- $cur) )
  return 0
}
complete -F _snapcraft snapcraft
complete -F _snapcraft lxd_snapcraft
